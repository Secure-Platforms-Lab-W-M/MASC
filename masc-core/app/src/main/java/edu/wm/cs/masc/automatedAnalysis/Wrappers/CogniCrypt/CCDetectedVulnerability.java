package edu.wm.cs.masc.automatedAnalysis.Wrappers.CogniCrypt;

import java.util.List;

public class CCDetectedVulnerability {
    String className, methodName, ruleId, messageText, artifact;
    int ruleIndex;
    List<String> body;



    public CCDetectedVulnerability(String className, String methodName, String artifact, int ruleIndex, List<String> body)  {
        this.className = className;
        this.methodName = methodName;
        this.artifact = artifact.replace("\\", "\\\\");
        this.ruleIndex = ruleIndex;
        this.body = body;

        ruleId = body.get(0).split(" ", 2)[0].trim();
        messageText = body.get(0).split(" ", 2)[1].split("\\(", 2)[0].trim();
        messageText += " " + body.get(1).trim();
        messageText += " " + body.get(2).trim();
        messageText = messageText.replace("\"", "\\\"");
    }

    public String getJSON() {
        return String.format(
                "             {\n" +
                "                \"ruleId\":\"%s\",\n" +
                "                \"ruleIndex\":%d,\n" +
                "                \"message\":{\n" +
                "                   \"id\":\"default\",\n" +
                "                   \"text\":\"%s\"\n" +
                "                },\n" +
                "                \"level\":\"error\",\n" +
                "                \"locations\":[\n" +
                "                   {\n" +
                "                      \"physicalLocation\":{\n" +
                "                         \"artifactLocation\":{\n" +
                "                            \"uri\":\"%s\"\n" +
                "                         },\n" +
                "                         \"region\":{\n" +
                "                            \"startLine\":-1\n" +
                "                         }\n" +
                "                      },\n" +
                "                      \"logicalLocations\":[\n" +
                "                         {\n" +
                "                            \"name\":\"%s\",\n" +
                "                            \"kind\":\"function\",\n" +
                "                            \"fullyQualifiedName\":\"%s.%s\"\n" +
                "                         }\n" +
                "                      ]\n" +
                "                   }\n" +
                "                ]\n" +
                "             }",
                ruleId, ruleIndex, messageText, artifact, methodName, className, methodName);
    }
}
