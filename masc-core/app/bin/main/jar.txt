Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.Cipher
	javax.crypto.CipherInputStream
	javax.crypto.CipherOutputStream
	void
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.DHParameterSpec
	java.security.DigestInputStream
	java.security.DigestOutputStream
	java.security.spec.DSAGenParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.crypto.spec.IvParameterSpec
	java.security.Key
	javax.crypto.KeyGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.KeyPair
	java.security.KeyPairGenerator
	java.security.KeyStore
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.Mac
	java.security.MessageDigest
	javax.crypto.spec.PBEKeySpec
	javax.crypto.spec.PBEParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.cert.PKIXParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.SecretKey
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	java.security.SecureRandom
	java.security.Signature
	javax.net.ssl.SSLContext
	javax.net.ssl.SSLEngine
	javax.net.ssl.SSLParameters
	java.security.cert.TrustAnchor
	javax.net.ssl.TrustManagerFactory

Analyzed Objects: 
	Object:
		Variable: r1
		Type: java.security.KeyPair
		Statement: r1 = virtualinvoke r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <example.IncompleOperationErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: dfc8cb2fa78f14f84cc964d295bfd495802b09297c29b7a9343dd2b86cc41855
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.Cipher
		Statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r6)
		Method: <example.ImpreciseValueExtractionErrorExample: void main(java.lang.String[])>
		SHA-256: 140c2ded8fe9c48786d83f8be85f578db88952c246933ab7a9425d5f6f6fc669
		Secure: true
	Object:
		Variable: r0
		Type: java.security.KeyPairGenerator
		Statement: r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer14)
		Method: <example.IncompleOperationErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: efbc8d63dafc571768e4baf0d281efcdb71e76b806d23a759027b87f2f1eb686
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <example.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 6d8bdb1ed5fe0e932ce63ac180d03203574e2130d4b340f33df31da976c2a8b5
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.SecretKey
		Statement: r1 = virtualinvoke r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <example.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 397eab2349a84b690db5490764f66088a9e26874c97c741d552f97f956c5110
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.Cipher
		Statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)
		Method: <example.ConstraintErrorExample: void main(java.lang.String[])>
		SHA-256: 7fbc589d2fe72a5e416355fef7c089dde608f49ae81f97879320f60de3fbfbfc
		Secure: false
	Object:
		Variable: r0
		Type: java.security.Signature
		Statement: r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12)
		Method: <example.IncompleOperationErrorExample: void main(java.lang.String[])>
		SHA-256: 7967e8440e44c14869a53cfa484e1163af78545a012ee7682804bd80f2ba704c
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer6)
		Method: <example.ImpreciseValueExtractionErrorExample: java.security.Key getKey()>
		SHA-256: 2ae261b7e3daf7d645681f4061f859ef84def21819443b404582856cd64a8cfd
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <example.ImpreciseValueExtractionErrorExample: java.security.Key getKey()>
		SHA-256: 70863954ef25bb7aeb2eae7c6fba6aadcbad416b7759e25fd331d264e7724831
		Secure: true
	Object:
		Variable: r0
		Type: java.security.KeyPairGenerator
		Statement: r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3)
		Method: <example.TypestateErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 99151e60b5d63c442a08c391bc227dc5f5c5d6b4ab7347bfdf7b35a76bb0fdaf
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPair
		Statement: r1 = virtualinvoke r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <example.TypestateErrorExample: java.security.PrivateKey getPrivateKey()>
		SHA-256: 3eff50218628cce8c5ccbcfe7604bf30c991e277635ed1c320ee903cb2300cae
		Secure: false
	Object:
		Variable: r0
		Type: java.security.Signature
		Statement: r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1)
		Method: <example.TypestateErrorExample: void main(java.lang.String[])>
		SHA-256: 1ab8ceb02f9709b7525154e705c1c1564c747594a09d2bf88c09c89a922f037f
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9)
		Method: <example.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 28278c04b7d22cc93f45a19955dac3579d77cf22159c661194ff60301a689802
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.KeyGenerator
		Statement: r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer11)
		Method: <example.PredicateMissingExample: void main(java.lang.String[])>
		SHA-256: 5312a4bc4be39018c4f8e442367b267497ba0dfbdf180543949e0d1501292e55
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke r0.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <example.ImpreciseValueExtractionErrorExample: void main(java.lang.String[])>
		SHA-256: 92922cfc258d5af47011499d8c10de4d30be8ec5e9b9362b71e2c6a866a22f2c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer13)
		Method: <example.IncompleOperationErrorExample: void doInit()>
		SHA-256: b2e41ee1de814dbc674eccaf714fdb573696d33ba4064901c4ca619e96e313e2
		Secure: false

Findings in Java Class: example.ConstraintErrorExample

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7fbc589d2fe72a5e416355fef7c089dde608f49ae81f97879320f60de3fbfbfc)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7fbc589d2fe72a5e416355fef7c089dde608f49ae81f97879320f60de3fbfbfc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)


Findings in Java Class: example.TypestateErrorExample

	 in Method: void main(java.lang.String[])
		TypestateError violating CrySL rule for java.security.Signature (on Object #1ab8ceb02f9709b7525154e705c1c1564c747594a09d2bf88c09c89a922f037f)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods initSign,update
			at statement: virtualinvoke r0.<java.security.Signature: byte[] sign()>()


	 in Method: java.security.PrivateKey getPrivateKey()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #99151e60b5d63c442a08c391bc227dc5f5c5d6b4ab7347bfdf7b35a76bb0fdaf)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r0.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer2)


Findings in Java Class: example.PredicateMissingExample

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #5312a4bc4be39018c4f8e442367b267497ba0dfbdf180543949e0d1501292e55)
			First parameter (with value 46) should be any of {128, 192, 256}
			at statement: virtualinvoke r0.<javax.crypto.KeyGenerator: void init(int)>(varReplacer10)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8, r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #28278c04b7d22cc93f45a19955dac3579d77cf22159c661194ff60301a689802)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9)


Findings in Java Class: example.IncompleOperationErrorExample

	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7967e8440e44c14869a53cfa484e1163af78545a012ee7682804bd80f2ba704c)
			Operation on object of type java.security.Signature object not completed. Expected call to sign
			at statement: virtualinvoke r0.<java.security.Signature: void update(byte[])>($r4)


	 in Method: java.security.PrivateKey getPrivateKey()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #efbc8d63dafc571768e4baf0d281efcdb71e76b806d23a759027b87f2f1eb686)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r0.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer15)


	 in Method: void doInit()
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 16

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 5
	TypestateError: 1
	IncompleteOperationError: 2
=====================================================================
